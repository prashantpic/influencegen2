sequenceDiagram
    actor UIAdminBackend as "«Admin User»Admin Backend UI"
    participant ServicePayment as "«Service»Payment Service"
    participant PlatformOdooCore as "«Datastore»Odoo Core Platform / Database"
    participant GatewayAccounting as "«Gateway»Accounting Gateway"
    participant PlatformNotification as "«Service»Notification Platform"

    note over UIAdminBackend: Alternative trigger for step 1: A scheduled job in Odoo can automatically initiate payment calculations based on predefined criteria (e.g., campaign end dates, approved deliverables).
    UIAdminBackend-ServicePayment: 1. Admin triggers payment calculation for eligible influencers/campaigns (e.g., based on REQ-2-014, REQ-IPF-003)
    activate ServicePayment
    note right of ServicePayment: Performance Consideration: Payment calculation (step 1 internal) for many influencers/campaigns could be resource-intensive. Consider background processing for large batches.

    ServicePayment-PlatformOdooCore: 2. For each calculated payment: createPaymentRecord(influencerId, campaignId, amount, currency, status='pending')
    activate PlatformOdooCore
    PlatformOdooCore--ServicePayment: 2.1. paymentRecordId
    deactivate PlatformOdooCore

    ServicePayment--UIAdminBackend: 1.1. Calculation summary / Batch ID
    deactivate ServicePayment

    UIAdminBackend-ServicePayment: 3. Admin reviews and approves payment batch (Batch ID)
    activate ServicePayment

    alt Condition: Batch Approved
        ServicePayment-GatewayAccounting: 4. initiatePaymentBatchProcessing(Batch ID, paymentRecords)
        activate GatewayAccounting

        GatewayAccounting-PlatformOdooCore: 4.a. For each payment: createVendorBill(influencerasvendor, amount, currency, paymentRecordIdref) (REQ-IPF-006)
        activate PlatformOdooCore
        note right of GatewayAccounting: Error Handling: If createVendorBill (4.a) fails, Gateway.Accounting should return an error to Service.Payment, which then updates the relevant PaymentRecord to a 'failedaccountingintegration' status and alerts admins.
        PlatformOdooCore--GatewayAccounting: 4.a.1. vendorBillId / internalPaymentInstructionId
        deactivate PlatformOdooCore

        opt Optional Trigger
            GatewayAccounting-PlatformOdooCore: 4.b. [Optional] Trigger actual payment execution for Vendor Bills (if not automatic)
        end

        GatewayAccounting--ServicePayment: 4.1. AccountingBatchReference (e.g., list of vendor bill IDs or processing status)
        deactivate GatewayAccounting
    end

    ServicePayment--UIAdminBackend: 3.1. ApprovalConfirmation
    deactivate ServicePayment

    note over PlatformOdooCore, ServicePayment: The mechanism for step 5 (Payment Executed Event) can be an Odoo business event, a direct callback configured if Odoo's accounting module supports it, or a polling mechanism by Service.Payment as a last resort.
    PlatformOdooCore--ServicePayment: 5. [Event/Callback] paymentExecuted(paymentRecordIdref, status, transactionId, paidDate)
    activate ServicePayment

    ServicePayment-PlatformOdooCore: 5.a. updatePaymentRecordStatus(paymentRecordId, status, transactionId, paidDate) (REQ-2-015)
    activate PlatformOdooCore
    note right of PlatformOdooCore: Data Integrity: paymentRecordId should be used to reconcile accounting transactions with InfluenceGen payment records.
    PlatformOdooCore--ServicePayment: 5.a.1. UpdateConfirmation
    deactivate PlatformOdooCore

    deactivate ServicePayment

    activate ServicePayment
    opt Condition: paymentRecord status is 'paid'
        ServicePayment-PlatformNotification: 6. sendPaymentConfirmationNotification(influencerId, amount, campaignName, paymentDate)
    end

    opt Condition: Accounting Integration Error or Payment Execution Failed
        ServicePayment-PlatformOdooCore: 7.a. updatePaymentRecordStatus(paymentRecordId, status='failed', failureReason)
        activate PlatformOdooCore
        PlatformOdooCore--ServicePayment: 7.a.1. UpdateConfirmation
        deactivate PlatformOdooCore

        ServicePayment-PlatformNotification: 7.b. sendPaymentFailureNotification(admin_group, paymentBatchId, failureReason)
    end
    deactivate ServicePayment