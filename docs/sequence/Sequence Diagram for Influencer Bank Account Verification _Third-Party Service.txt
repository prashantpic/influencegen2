sequenceDiagram
    actor "InfluenceGen Admin UI" as AdminUI
    participant "InfluenceGen Business Services" as BusinessService
    participant "InfluenceGen Integration Services" as IntegrationService
    note over AdminUI: Admin must have appropriate permissions to review campaign content.
    AdminUI-BusinessService: 1. Request Content Submission Details (contentsubmissionid)
    activate BusinessService
    BusinessService--AdminUI: 2. Return Content Submission Details (contentdata)
    deactivate BusinessService
    activate AdminUI
    AdminUI-AdminUI: 3. Admin reviews content, associated details, and formulates feedback/decision.
    deactivate AdminUI
    AdminUI-BusinessService: 4. Submit Content Review (contentsubmissionid, actiontype, feedbacktext)
    activate BusinessService
    note over BusinessService: DB operations (update ContentSubmission, create AuditLog) are transactional to ensure data consistency.
    alt actiontype == 'Approve'
        BusinessService-BusinessService: 5.1.1. Update ContentSubmission status to 'Approved', store feedback. (DB Write)
        BusinessService-BusinessService: 5.1.2. Create Audit Log for 'Content Approved'. (REQ-2-018)
    else actiontype == 'Reject'
        BusinessService-BusinessService: 5.2.1. Update ContentSubmission status to 'Rejected', store feedback. (DB Write)
        BusinessService-BusinessService: 5.2.2. Create Audit Log for 'Content Rejected'. (REQ-2-018)
    else actiontype == 'Request Revision'
        BusinessService-BusinessService: 5.3.1. Update ContentSubmission status to 'Needs Revision', store feedback. (DB Write)
        BusinessService-BusinessService: 5.3.2. Create Audit Log for 'Content Revision Requested'. (REQ-2-018)
    end
    BusinessService-IntegrationService: 6. Request Influencer Notification (influencerid, campaignname, contentstatus, feedback)
    activate IntegrationService
    IntegrationService-IntegrationService: 7. Prepare and Dispatch Notification (e.g., Email to Influencer)
    note right of IntegrationService: Performance Consideration: Efficient query for fetching content details. Notification dispatch is potentially asynchronous in its final step (e.g., SMTP call).
    IntegrationService--BusinessService: 8. Return Notification Queued/Sent Status
    deactivate IntegrationService
    note over BusinessService: Error Handling: If DB update fails, transaction is rolled back, error returned to Admin UI. If notification fails, error is logged, but content status update might still commit. Critical failures in notification may require admin intervention.
    BusinessService--AdminUI: 9. Return Review Processed Status (success/failure, updatedcontentdata)
    deactivate BusinessService
    activate AdminUI
    AdminUI-AdminUI: 10. Display Updated Status and Confirmation to Admin.
    deactivate AdminUI